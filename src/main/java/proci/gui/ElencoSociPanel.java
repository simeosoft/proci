/*
    Gestione Soci Protezione Civile
    Copyright (C) Simeosoft di Carlo Simeone
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

package proci.gui;
import com.simeosoft.string.StringUtils;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import proci.DBHandler;
import proci.App;
import proci.util.ProciUtils;

/**
 *
 * @author  simeo
 */
public class ElencoSociPanel extends javax.swing.JPanel {

    private final App app = App.getInstance();
        
    /** Creates new form ElencoSociPanel */
    public ElencoSociPanel() {
        initComponents();
        SociTableModel stm = new SociTableModel();
        jtaSoci.setModel(stm);
    }
    
    private class SociTableModel extends AbstractTableModel {
        private Connection conn = null;
        private Statement stmt = null;
        private ResultSet rs = null;
        private int rowCount = 0;        
        public SociTableModel()  {
            try {
                conn = DBHandler.getInstance().getConnection();
                stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
                rs = stmt.executeQuery("select * from SOCIO order by SOID");
                rs.last();
                rowCount = rs.getRow();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(app.getMainFrame(),e,"ERRORE stm!",JOptionPane.ERROR_MESSAGE);
            }
        }
        @Override
        public Object getValueAt(int r, int c) {
            try {
                rs.absolute(r + 1);
                switch(c + 1) {
                    case 6:
                        Date data = (Date) rs.getObject(c + 1);
                        return StringUtils.formatDate(data, StringUtils.FORMAT_DD_MM_YYYY_SLASH);
                    case 19:
                        String tipo = (String) rs.getObject(c + 1);
                    switch (tipo) {
                        case "O":
                            return "OPERATIVO";
                        case "N":
                            return "NON OPERATIVO";
                        default:
                            return "ONORARIO";
                    }
                }
                return rs.getObject(c + 1);
            } catch (SQLException e) {
                return "err: " + r + " " + c + " " + e;
            }
        }
        @Override
        public String getColumnName(int c) {
            return ProciUtils.socio_intest[c];
        }
        @Override
        public int getColumnCount() {
            return ProciUtils.socio_intest.length;
        }
        @Override
        public int getRowCount() {
            return rowCount;
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtaSoci = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jtaSoci.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtaSoci.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jtaSoci);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtaSoci;
    // End of variables declaration//GEN-END:variables
    
}
