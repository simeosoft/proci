/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proci.gui;

import com.simeosoft.swing.TransferData;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.imgscalr.Scalr;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import proci.App;
import proci.EDirectories;
import proci.gui.image.MetaImage;

/**
 *
 * @author simeo
 */
public class ThumbPanel extends javax.swing.JPanel {
    static final Logger logger = LoggerFactory.getLogger(ThumbPanel.class);    
    private static final long serialVersionUID = 7796361119198316059L;
    // immagine originale
    private MetaImage mi;
    private static final int THUMB_WIDTH = 200;
    private static final int THUMB_HEIGHT = 300;
    /**
     * Creates new form ThumbPanel
     * @param mi
     */
    public ThumbPanel(MetaImage mi) {
        initComponents();
        // shouldn't be null
        this.mi = mi;
        Dimension defaultSize = new Dimension(THUMB_WIDTH, THUMB_HEIGHT);
        this.setSize(defaultSize);
        jbDelete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                delete();
            }
        });
        jbEditImage.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                edit();
            }
        });
        jbSalva.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                save();
            }
        });        
        // genera immagine thumbnail per visualizzazione
        if (mi.isValid()) {
            BufferedImage scaledImg = Scalr.resize(mi.getImage(), THUMB_WIDTH, THUMB_HEIGHT);
            jlImage.setIcon(new ImageIcon(scaledImg));
        } else {
            jlImage.setIcon(new ImageIcon(mi.getImage()));
        }
        if (! mi.isValid()) {
            jlCaption.setForeground(Color.red);
        }
        jlCaption.setText(mi.getDescr());
        jbSalva.setEnabled(false);
    }

    private void save() {
        File dest = new File(App.getInstance().getAppPath(EDirectories.IMAGES_RESIZED) + mi.getFile().getName());
        logger.debug("Scrivo su: {}",dest.getAbsolutePath());
        try {
            ImageIO.write(mi.getImage(),mi.getMimetype(),dest);
        } catch (IOException ex) {
            logger.error("Errore save: ",ex);
            JOptionPane.showMessageDialog(this,ex,"Errore salvataggio immagine!",JOptionPane.ERROR_MESSAGE);
            logger.error("Errore salvataggio immagine: {}",ex);            
        }
    }
    
    private void delete() {
        int rc = JOptionPane.showConfirmDialog(this,"Confermi cancellazione " + mi.getFile().getName() + "?","Conferma",
                JOptionPane.YES_NO_OPTION);
        if (rc == JOptionPane.NO_OPTION) {
            return;
        }
        mi.getFile().delete();
        Container parent = this.getParent();
        parent.remove(this);
        parent.revalidate();
        parent.repaint();
    }
    private void edit() {
        EditImageDialog ed = new EditImageDialog(App.getInstance().getMainFrame(),mi);
        TransferData td = ed.showDialog();        
        if (td.getValueStatus() == TransferData.ERetValues.OK_VALUE) {
            jbSalva.setEnabled(true);
        }
    }       
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlImage = new javax.swing.JLabel();
        jlCaption = new javax.swing.JLabel();
        jbDelete = new javax.swing.JButton();
        jbEditImage = new javax.swing.JButton();
        jbSalva = new javax.swing.JButton();
        jbHelp = new javax.swing.JButton();

        setBackground(java.awt.Color.white);
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jlImage.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jlImage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(jlImage);

        jlCaption.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jlCaption.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCaption.setText("label");

        jbDelete.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        jbDelete.setText("elimina");
        jbDelete.setMaximumSize(new java.awt.Dimension(54, 24));

        jbEditImage.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        jbEditImage.setText("modifica");

        jbSalva.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        jbSalva.setText("salva");
        jbSalva.setMaximumSize(new java.awt.Dimension(54, 24));

        jbHelp.setIcon(new javax.swing.ImageIcon("/home/simeo/java/projects/netbeans/Proci/immagini/common/help.png")); // NOI18N
        jbHelp.setMaximumSize(new java.awt.Dimension(54, 24));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbEditImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbSalva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jlCaption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jbEditImage)
                        .addGap(18, 18, 18)
                        .addComponent(jbSalva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbHelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlCaption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbEditImage;
    private javax.swing.JButton jbHelp;
    private javax.swing.JButton jbSalva;
    private javax.swing.JLabel jlCaption;
    private javax.swing.JLabel jlImage;
    // End of variables declaration//GEN-END:variables
}
